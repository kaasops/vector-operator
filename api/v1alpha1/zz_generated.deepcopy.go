//go:build !ignore_autogenerated

/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiSpec) DeepCopyInto(out *ApiSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiSpec.
func (in *ApiSpec) DeepCopy() *ApiSpec {
	if in == nil {
		return nil
	}
	out := new(ApiSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVectorAggregator) DeepCopyInto(out *ClusterVectorAggregator) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVectorAggregator.
func (in *ClusterVectorAggregator) DeepCopy() *ClusterVectorAggregator {
	if in == nil {
		return nil
	}
	out := new(ClusterVectorAggregator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVectorAggregator) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVectorAggregatorList) DeepCopyInto(out *ClusterVectorAggregatorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterVectorAggregator, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVectorAggregatorList.
func (in *ClusterVectorAggregatorList) DeepCopy() *ClusterVectorAggregatorList {
	if in == nil {
		return nil
	}
	out := new(ClusterVectorAggregatorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVectorAggregatorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVectorAggregatorSpec) DeepCopyInto(out *ClusterVectorAggregatorSpec) {
	*out = *in
	in.VectorAggregatorCommon.DeepCopyInto(&out.VectorAggregatorCommon)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVectorAggregatorSpec.
func (in *ClusterVectorAggregatorSpec) DeepCopy() *ClusterVectorAggregatorSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterVectorAggregatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVectorAggregatorStatus) DeepCopyInto(out *ClusterVectorAggregatorStatus) {
	*out = *in
	in.VectorCommonStatus.DeepCopyInto(&out.VectorCommonStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVectorAggregatorStatus.
func (in *ClusterVectorAggregatorStatus) DeepCopy() *ClusterVectorAggregatorStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterVectorAggregatorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVectorPipeline) DeepCopyInto(out *ClusterVectorPipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVectorPipeline.
func (in *ClusterVectorPipeline) DeepCopy() *ClusterVectorPipeline {
	if in == nil {
		return nil
	}
	out := new(ClusterVectorPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVectorPipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVectorPipelineList) DeepCopyInto(out *ClusterVectorPipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterVectorPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVectorPipelineList.
func (in *ClusterVectorPipelineList) DeepCopy() *ClusterVectorPipelineList {
	if in == nil {
		return nil
	}
	out := new(ClusterVectorPipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVectorPipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigCheck) DeepCopyInto(out *ConfigCheck) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = new([]v1.Toleration)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.Toleration, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigCheck.
func (in *ConfigCheck) DeepCopy() *ConfigCheck {
	if in == nil {
		return nil
	}
	out := new(ConfigCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventCollector) DeepCopyInto(out *EventCollector) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventCollector.
func (in *EventCollector) DeepCopy() *EventCollector {
	if in == nil {
		return nil
	}
	out := new(EventCollector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Vector) DeepCopyInto(out *Vector) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Vector.
func (in *Vector) DeepCopy() *Vector {
	if in == nil {
		return nil
	}
	out := new(Vector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Vector) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorAgent) DeepCopyInto(out *VectorAgent) {
	*out = *in
	in.VectorCommon.DeepCopyInto(&out.VectorCommon)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorAgent.
func (in *VectorAgent) DeepCopy() *VectorAgent {
	if in == nil {
		return nil
	}
	out := new(VectorAgent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorAggregator) DeepCopyInto(out *VectorAggregator) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorAggregator.
func (in *VectorAggregator) DeepCopy() *VectorAggregator {
	if in == nil {
		return nil
	}
	out := new(VectorAggregator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VectorAggregator) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorAggregatorCommon) DeepCopyInto(out *VectorAggregatorCommon) {
	*out = *in
	in.VectorCommon.DeepCopyInto(&out.VectorCommon)
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(VectorSelectorSpec)
		(*in).DeepCopyInto(*out)
	}
	out.EventCollector = in.EventCollector
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorAggregatorCommon.
func (in *VectorAggregatorCommon) DeepCopy() *VectorAggregatorCommon {
	if in == nil {
		return nil
	}
	out := new(VectorAggregatorCommon)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorAggregatorList) DeepCopyInto(out *VectorAggregatorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VectorAggregator, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorAggregatorList.
func (in *VectorAggregatorList) DeepCopy() *VectorAggregatorList {
	if in == nil {
		return nil
	}
	out := new(VectorAggregatorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VectorAggregatorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorAggregatorSpec) DeepCopyInto(out *VectorAggregatorSpec) {
	*out = *in
	in.VectorAggregatorCommon.DeepCopyInto(&out.VectorAggregatorCommon)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorAggregatorSpec.
func (in *VectorAggregatorSpec) DeepCopy() *VectorAggregatorSpec {
	if in == nil {
		return nil
	}
	out := new(VectorAggregatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorAggregatorStatus) DeepCopyInto(out *VectorAggregatorStatus) {
	*out = *in
	in.VectorCommonStatus.DeepCopyInto(&out.VectorCommonStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorAggregatorStatus.
func (in *VectorAggregatorStatus) DeepCopy() *VectorAggregatorStatus {
	if in == nil {
		return nil
	}
	out := new(VectorAggregatorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorCommon) DeepCopyInto(out *VectorCommon) {
	*out = *in
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityContext != nil {
		in, out := &in.SecurityContext, &out.SecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerSecurityContext != nil {
		in, out := &in.ContainerSecurityContext, &out.ContainerSecurityContext
		*out = new(v1.SecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.RuntimeClassName != nil {
		in, out := &in.RuntimeClassName, &out.RuntimeClassName
		*out = new(string)
		**out = **in
	}
	if in.HostAliases != nil {
		in, out := &in.HostAliases, &out.HostAliases
		*out = make([]v1.HostAlias, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpireMetricsSecs != nil {
		in, out := &in.ExpireMetricsSecs, &out.ExpireMetricsSecs
		*out = new(int)
		**out = **in
	}
	out.Api = in.Api
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(v1.Probe)
		(*in).DeepCopyInto(*out)
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(v1.Probe)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.ConfigCheck.DeepCopyInto(&out.ConfigCheck)
	in.ConfigReloaderResources.DeepCopyInto(&out.ConfigReloaderResources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorCommon.
func (in *VectorCommon) DeepCopy() *VectorCommon {
	if in == nil {
		return nil
	}
	out := new(VectorCommon)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorCommonStatus) DeepCopyInto(out *VectorCommonStatus) {
	*out = *in
	if in.ConfigCheckResult != nil {
		in, out := &in.ConfigCheckResult, &out.ConfigCheckResult
		*out = new(bool)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.LastAppliedConfigHash != nil {
		in, out := &in.LastAppliedConfigHash, &out.LastAppliedConfigHash
		*out = new(uint32)
		**out = **in
	}
	if in.LastAppliedGlobalConfigHash != nil {
		in, out := &in.LastAppliedGlobalConfigHash, &out.LastAppliedGlobalConfigHash
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorCommonStatus.
func (in *VectorCommonStatus) DeepCopy() *VectorCommonStatus {
	if in == nil {
		return nil
	}
	out := new(VectorCommonStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorList) DeepCopyInto(out *VectorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Vector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorList.
func (in *VectorList) DeepCopy() *VectorList {
	if in == nil {
		return nil
	}
	out := new(VectorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VectorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorPipeline) DeepCopyInto(out *VectorPipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorPipeline.
func (in *VectorPipeline) DeepCopy() *VectorPipeline {
	if in == nil {
		return nil
	}
	out := new(VectorPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VectorPipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorPipelineList) DeepCopyInto(out *VectorPipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VectorPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorPipelineList.
func (in *VectorPipelineList) DeepCopy() *VectorPipelineList {
	if in == nil {
		return nil
	}
	out := new(VectorPipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VectorPipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorPipelineSpec) DeepCopyInto(out *VectorPipelineSpec) {
	*out = *in
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.Sinks != nil {
		in, out := &in.Sinks, &out.Sinks
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorPipelineSpec.
func (in *VectorPipelineSpec) DeepCopy() *VectorPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(VectorPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorPipelineStatus) DeepCopyInto(out *VectorPipelineStatus) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(VectorPipelineRole)
		**out = **in
	}
	if in.ConfigCheckResult != nil {
		in, out := &in.ConfigCheckResult, &out.ConfigCheckResult
		*out = new(bool)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.LastAppliedPipelineHash != nil {
		in, out := &in.LastAppliedPipelineHash, &out.LastAppliedPipelineHash
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorPipelineStatus.
func (in *VectorPipelineStatus) DeepCopy() *VectorPipelineStatus {
	if in == nil {
		return nil
	}
	out := new(VectorPipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSelectorSpec) DeepCopyInto(out *VectorSelectorSpec) {
	*out = *in
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSelectorSpec.
func (in *VectorSelectorSpec) DeepCopy() *VectorSelectorSpec {
	if in == nil {
		return nil
	}
	out := new(VectorSelectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSpec) DeepCopyInto(out *VectorSpec) {
	*out = *in
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		*out = new(VectorAgent)
		(*in).DeepCopyInto(*out)
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(VectorSelectorSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSpec.
func (in *VectorSpec) DeepCopy() *VectorSpec {
	if in == nil {
		return nil
	}
	out := new(VectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorStatus) DeepCopyInto(out *VectorStatus) {
	*out = *in
	in.VectorCommonStatus.DeepCopyInto(&out.VectorCommonStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorStatus.
func (in *VectorStatus) DeepCopy() *VectorStatus {
	if in == nil {
		return nil
	}
	out := new(VectorStatus)
	in.DeepCopyInto(out)
	return out
}
